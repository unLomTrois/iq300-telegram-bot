import { Markup } from "telegraf";

import moment from "moment";

export const showMenu = (ctx) => {
  return ctx.reply(
    "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
    Markup.keyboard(["üîî –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è", "üë§ –ü—Ä–æ—Ñ–∏–ª—å"]).resize()
  );
};

export const statusLocale = {
  new: "–Ω–æ–≤–∞—è",
  on_init: "–∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è",
  browsed: "–ø—Ä–æ—Å–º–æ—Ç—Ä–µ–Ω–∞",
  in_work: "–≤ —Ä–∞–±–æ—Ç–µ",
  refused: "–æ—Ç–∫–∞–∑–∞–Ω–æ",
  completed: "–Ω–∞ –ø—Ä–æ–≤–µ—Ä–∫–µ",
  accepted: "–≤—ã–ø–æ–ª–Ω–µ–Ω–∞",
  declined: "–Ω–µ –ø—Ä–∏–Ω—è—Ç–∞",
  canceled: "–æ—Ç–º–µ–Ω–µ–Ω–∞",
};

export const kind = {
  Task: "–ó–∞–¥–∞—á–∞",
  TemplateTask: "–ß–µ—Ä–Ω–æ–≤–∏–∫ –∑–∞–¥–∞—á–∏",
  TaskGroup: "–í–µ—Ö–∞",
};

export const isToday = (someDate) => {
  const today = new Date();
  return (
    someDate.getDate() == today.getDate() &&
    someDate.getMonth() == today.getMonth() &&
    someDate.getFullYear() == today.getFullYear()
  );
};

export const convertDate = (end_date) => {
  const date = new Date(end_date);

  return moment(date).locale("ru").format("D MMMM");
};

export const convertEndDate = (end_date) => {
  const date = new Date(end_date);

  if (isToday(date)) {
    return `—Å–µ–≥–æ–¥–Ω—è –≤ ${moment(date).locale("ru").format("HH:mm")}` ;
  }

  return moment(date).locale("ru").format("HH:mm D MMMM");
};